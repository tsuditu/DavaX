CREATE TABLE SRC_EXAM_ABSENCES (
    id_exam_absenta     NUMBER GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY, -- identificator unic
    nume_complet        VARCHAR2(100),       -- numele angajatului (pentru legare cu SRC_ANGAJAT)
    id_angajat          NUMBER,              -- va fi completat prin UPDATE (join pe nume)
    data_absenta        DATE NOT NULL,       -- ziua absentei pentru examen
    ore_absenta         NUMBER(4,2),         -- durata absentei in ore
    loading_timestamp   TIMESTAMP,           -- metadate: cand a fost importata inregistrarea
    dataset_nume        VARCHAR2(50)         -- eticheta importului (automat)
);

-- ==============================
-- TRIGGER: TRG_SET_METADATA_EXAM_ABSENCES
-- ==============================

CREATE OR REPLACE TRIGGER trg_set_metadata_exam_absences
BEFORE INSERT ON SRC_EXAM_ABSENCES
FOR EACH ROW
BEGIN
  :NEW.loading_timestamp := SYSTIMESTAMP;
  :NEW.dataset_nume := 'exam_absences_' || TO_CHAR(SYSTIMESTAMP, 'DD-MM-YY');
END;
/

-- Actualizeaza coloana id_angajat in SRC_EXAM_ABSENCES
-- pe baza numelui complet din tabela SRC_ANGAJAT
UPDATE SRC_EXAM_ABSENCES ea
SET id_angajat = (
  SELECT a.id_angajat
  FROM SRC_ANGAJAT a
  WHERE LOWER(TRIM(a.nume)) = LOWER(TRIM(ea.nume_complet))
)
WHERE ea.id_angajat IS NULL;


COMMIT;
